###
# pyCA Configuration
##

# Notice: Most properties do have sensible defaults. Things that should be
# changed are those properties that are not commented out in this file.


[agent]

# Name of the capture agent
# Type: string
# Default: pyca
name             = 'pyca'

# How often (in seconds) should the capture agent try to get an updated
# schedule from the core.
# Type: integer
# Default: 60
#update_frequency = 60

# For how many days in advance shall the capture agent get the schedule. A
# smaller value will be faster and less memory consuming. Setting this to 0
# will make pyCA request all scheduled events.
# Type: integer
# Default: 14
#cal_lookahead    = 14

# In backup mode, the pyCA will not register itself or ingest anything to the
# core. It is useful if you want pyCA act as backup to another capture agent.
# To get the events for another agent, also set the name of the agent to the
# one that should be backed up.
# Type: boolean
# Default: False
#backup_mode      = False

# If the capture agent should ignore timezones and assume local time. This is
# usually not required but might help in certain circumstances.
# Type: Boolean
# Default: False
#ignore_timezone  = False


[capture]

# Base directory to store recordings in. For each recording a subdirectory
# will be created.
# Type: string
# Default: ./recordings
directory        = './recordings'

# Command to use for capturing. This may also be a script file. The only
# requirement is that the command terminates itself in time.
#
# Possible string substitutions you can use are:
#   {{time}}        Time to capture in seconds
#   {{dir}}         Directory to put recordings in
#   {{name}}        Autogenerated name of the recording.
#   {{previewdir}}  Directory to put preview images in
#
# Examples:
#
# Record pulseaudio source using FFmpeg:
#   ffmpeg -f pulse -i default -t %(time)s -c:a flac -ac 1 {{dir}}/{{name}}.flac
#
# Record video stream on a Reaspberry Pi using the camera module:
#   raspivid -n -t %(time)s000 -b 6000000 -fps 30 -o {{dir}}/{{name}}.h264
#
# Record audio using arecord (alsa recorder):
#   arecord -c 2 -d {{time}} -r 44100 -f S16_LE -D hw:0 {{dir}}/{{name}}.wav
#
# Run custom shell script:
#   /opt/rec.sh "{{dir}}" {{name]] {{time}}
#
# For more examples, have a look at the pyCA wiki.
#
# Type: string
# Default: ffmpeg -nostats -re -f lavfi -r 25 -i testsrc -t {{time}} {{dir}}/{{name}}.mp4'
command          = 'ffmpeg -nostats -re -f lavfi -r 25 -i testsrc -t {{time}} {{dir}}/{{name}}.mp4'

# Flavors of putput files produced by the capture command. One flavors should
# be specified for every output file.
# Type: list of strings
# Default: list('presenter/source')
#flavors          = list('presenter/source')

# Output files produces by the capture command.
# Type: list of strings
# Default: list('{{dir}}/{{name}}.mp4')
#files            = list('{{dir}}/{{name}}.mp4')

# Base directory for preview images generated by the capture command. They can
# be as confidence monitoring in the web ui.
# Type: String
# Default: ./recordings
#preview_dir      = './recordings'

# List of preview images to be included in the web ui.
# Type: list of strings
# Default: list()
#preview          = list()


[server]

# URL of the admin server.
# Type: string
# Default: http://mhtest.virtuos.uos.de:8080
url              = 'http://mhtest.virtuos.uos.de:8080'

# Analogue of -k, --insecure option in curl. Allows insercure SSL connections
# while using HTTPS on the server.
# Type: boolean
# Default: False
#insecure         = False

# Username for the admin server (digest authentication)
# Type: string
# Default: matterhorn_system_account
username         = 'matterhorn_system_account'

# Password for the admin server (digest authentication)
# Type: string
# Default: CHANGE_ME
password         = 'CHANGE_ME'


[ui]

# Username for the pyCA web interface
# Type: string
# Default: admin
#username         = 'admin'

# Password for the pyCA web interface
# Type: string
# Default: opencast
#password         = 'opencast'

# How often (seconds) should the web interface refresh itself.
# Type: integer
# Default: 2
#refresh_rate     = 2

# URL where the web interface is reachable. This will be sent to the Matterhorn
# core and displayed in the admin interface.
# Type: string
# Default: http://localhost:5000
#url              = 'http://localhost:5000'
